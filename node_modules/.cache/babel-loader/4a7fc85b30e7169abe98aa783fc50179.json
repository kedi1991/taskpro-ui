{"ast":null,"code":"import _slicedToArray from\"/workspace/taskpro_api/taskpro_ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useEffect}from'react';import axios from'axios';var useProjects=function useProjects(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),projects=_useState2[0],setProjects=_useState2[1];useEffect(function(){axios.get('/projects/').then(function(response){setProjects(response.data);}).catch(function(error){console.error('Error fetching project data:',error);});},[]);// ensures effect runs only once after initial render\nreturn{projects:projects};// Return data and loading state\n};export default useProjects;","map":{"version":3,"names":["useState","useEffect","axios","useProjects","_useState","_useState2","_slicedToArray","projects","setProjects","get","then","response","data","catch","error","console"],"sources":["/workspace/taskpro_api/taskpro_ui/src/hooks/useProjects.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst useProjects = () => {\n  const [projects, setProjects] = useState([]);\n\n  useEffect(() => {\n    axios.get('/projects/')\n      .then(response => {\n        setProjects(response.data);\n      })\n      .catch(error => {\n        console.error('Error fetching project data:', error);\n      });\n  }, []); // ensures effect runs only once after initial render\n\n  return { projects }; // Return data and loading state\n}\n\nexport default useProjects;\n"],"mappings":"uHAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC3C,MAAO,CAAAC,KAAK,KAAM,OAAO,CAEzB,GAAM,CAAAC,WAAW,CAAG,QAAd,CAAAA,WAAWA,CAAA,CAAS,CACxB,IAAAC,SAAA,CAAgCJ,QAAQ,CAAC,EAAE,CAAC,CAAAK,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAArCG,QAAQ,CAAAF,UAAA,IAAEG,WAAW,CAAAH,UAAA,IAE5BJ,SAAS,CAAC,UAAM,CACdC,KAAK,CAACO,GAAG,CAAC,YAAY,CAAC,CACpBC,IAAI,CAAC,SAAAC,QAAQ,CAAI,CAChBH,WAAW,CAACG,QAAQ,CAACC,IAAI,CAAC,CAC5B,CAAC,CAAC,CACDC,KAAK,CAAC,SAAAC,KAAK,CAAI,CACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,CAAEA,KAAK,CAAC,CACtD,CAAC,CAAC,CACN,CAAC,CAAE,EAAE,CAAC,CAAE;AAER,MAAO,CAAEP,QAAQ,CAARA,QAAS,CAAC,CAAE;AACvB,CAAC,CAED,cAAe,CAAAJ,WAAW"},"metadata":{},"sourceType":"module"}