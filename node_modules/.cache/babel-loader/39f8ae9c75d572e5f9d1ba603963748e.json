{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nconst useProjects = () => {\n  _s();\n  const [projects, setProjects] = useState([]);\n  useEffect(() => {\n    axios.get('/projects/').then(response => {\n      setProjects(response.data);\n    }).catch(error => {\n      console.error('Error fetching project data:', error);\n    });\n  }, []); // ensures effect runs only once after initial render\n\n  return {\n    projects\n  }; // Return data and loading state\n};\n_s(useProjects, \"TSrpuQX6QU8EgjQSxaAzj2u9i4o=\");\nexport default useProjects;","map":{"version":3,"names":["useState","useEffect","axios","useProjects","_s","projects","setProjects","get","then","response","data","catch","error","console"],"sources":["/workspace/taskpro_api/taskpro_ui/src/hooks/useProjects.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst useProjects = () => {\n  const [projects, setProjects] = useState([]);\n\n  useEffect(() => {\n    axios.get('/projects/')\n      .then(response => {\n        setProjects(response.data);\n      })\n      .catch(error => {\n        console.error('Error fetching project data:', error);\n      });\n  }, []); // ensures effect runs only once after initial render\n\n  return { projects }; // Return data and loading state\n}\n\nexport default useProjects;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACdC,KAAK,CAACK,GAAG,CAAC,YAAY,CAAC,CACpBC,IAAI,CAACC,QAAQ,IAAI;MAChBH,WAAW,CAACG,QAAQ,CAACC,IAAI,CAAC;IAC5B,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,OAAO;IAAEP;EAAS,CAAC,CAAC,CAAC;AACvB,CAAC;AAAAD,EAAA,CAdKD,WAAW;AAgBjB,eAAeA,WAAW"},"metadata":{},"sourceType":"module"}